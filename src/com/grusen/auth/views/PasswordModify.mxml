<?xml version="1.0" encoding="utf-8"?>
<views1:GrEdit xmlns:fx="http://ns.adobe.com/mxml/2009" 
			  xmlns:s="library://ns.adobe.com/flex/spark" 
			  xmlns:mx="library://ns.adobe.com/flex/mx"
			  xmlns:views="com.sg.components.views.*"
			  xmlns:controls="com.grusen.spark.components.controls.*" 
			  xmlns:validators="com.sg.components.mx.validators.*"
			  width="350" height="180" title="{SgResourceManager.getString(LocaleExtendConst.SET,'SET_AUTH_044')}"
			  creationComplete="onCreationCompleteHandler(event)" xmlns:controls1="com.sg.components.spark.components.controls.*" xmlns:validators1="ppf.tool.components.mx.validators.*" xmlns:controls2="ppf.tool.components.spark.components.controls.*" xmlns:views1="ppf.tool.components.views.*">
	<fx:Declarations>
		<!--密码不能为空-->
		<mx:StringValidator id="v_oldPassword" 
							source="{t_oldePassword}" 
							requiredFieldError="{SgResourceManager.getTipString('TIP_LOGIN_003')}"
							property="text" 
							minLength="{t_oldePassword.minChars}"
							maxLength="{t_oldePassword.maxChars}"/> 
		<!--密码不能为空-->
		<mx:StringValidator id="v_password" 
							source="{t_password}" 
							requiredFieldError="{SgResourceManager.getTipString('TIP_LOGIN_003')}"
							property="text" 
							minLength="{t_password.minChars}"
							maxLength="{t_password.maxChars}"/> 
		<!--请输入确认密码-->
		<!--密码不一致，请重新输入-->
		<validators1:CompareValidator id="v_compare"	
									 source="{t_confirmPassword}"	
									 minLength="{t_password.minChars}"
									 maxLength="{t_password.maxChars}"
									 property="text" 
									 requiredFieldError="{SgResourceManager.getTipString('TIP_AUTH_003')}"
									 compareSource="{t_password}" 								 								
									 compareProperty="text" 
									 compareError="{SgResourceManager.getTipString('TIP_AUTH_004')}"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.grusen.constants.LocaleExtendConst;
			import com.grusen.events.ModelEvent;
			import com.grusen.managers.SgResourceManager;
			import com.grusen.model.GlobalModel;
			import com.grusen.model.vo.User;
			import com.grusen.services.ServiceConst;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import ppf.base.math.MD5;
			import ppf.tool.components.ValidUtil;
			import ppf.tool.rpc.managers.RPCManager;
			import ppf.tool.text.RestrictUtil;
			
			override protected function checkAuth():void
			{
				auth_btnApply = true;
				isAdd = false;
			}
			
			override protected function onApply(event:MouseEvent,isSubmit:Boolean=true):Boolean
			{
				if (super.onApply(event,isSubmit))
				{
					var currUser:User = GlobalModel.getInstance().authDao.currUser;
					if(MD5.hash(t_oldePassword.text, 32) != currUser.password)
					{
//						"原密码不正确!"
						Alert.show(SgResourceManager.getTipString('TIP_AUTH_005'), SgResourceManager.getTipString('TIP_OVERVIEW_012'),Alert.OK|Alert.NONMODAL);
						this.enabled = true;
						return false;
					}	
					var password:String = MD5.hash(t_password.text, 32);
					if(password == currUser.password)
					{
						//"新密码与原密码一样！"
						Alert.show(SgResourceManager.getTipString('TIP_AUTH_006'), SgResourceManager.getTipString('TIP_BASE_004'),Alert.OK|Alert.NONMODAL);
						this.enabled = true;
						return false;
					}
					
					var user:User = new User;
					user.id = currUser.id;
					user.name = currUser.name;
					user.roleId = currUser.roleId;
					user.password = password;
					
					RPCManager.call(ServiceConst.DS_MAINHANDLER,"UpdateUser",user);
				}
				return true;
			}
			
			override protected function onResult(event:ResultEvent):void
			{
				super.onResult(event);
//				"修改密码成功！"
				Alert.show(SgResourceManager.getTipString('TIP_AUTH_007'),SgResourceManager.getString(LocaleExtendConst.PUBLIC,'PUBLIC_OP_010'));
			}
			
			override protected function onFault(event:FaultEvent):void
			{
				super.onFault(event);
//				"修改密码失败！"
				Alert.show(SgResourceManager.getTipString('TIP_AUTH_008'),SgResourceManager.getString(LocaleExtendConst.PUBLIC,'PUBLIC_OP_010'));
			}
			
			override protected function resume():void
			{
				super.resume();
				t_oldePassword.text= "";
				t_password.text= "";
				t_confirmPassword.text= "";
			}
			
			override protected function regValidators():void
			{
				ValidUtil.registerValidatorsOnPopUp(this,[v_oldPassword,v_password,v_compare]);
			}
			
			override protected function doValid():Boolean
			{
				var isValidForm:Boolean;
				isValidForm = ValidUtil.validForm(this,false,v_oldPassword,v_password,v_compare);
				return isValidForm;
			}
			
			protected function onCreationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				t_oldePassword.setFocus();
			}
			
		]]>
	</fx:Script>
	<mx:Form width="100%" height="100%">
		<!--原密码-->
		<mx:FormItem label="{SgResourceManager.getSetString('SET_AUTH_005')}" width="100%" required="true">
			<controls2:TextInput id="t_oldePassword" width="100%" minChars="1" maxChars="16" displayAsPassword="true" restrict="{RestrictUtil.PASSWORD_REG}"/>
		</mx:FormItem>
		<!--新密码-->
		<mx:FormItem label="{SgResourceManager.getSetString('SET_AUTH_006')}" width="100%" required="true">
			<controls2:TextInput id="t_password" width="100%" minChars="1" maxChars="16" displayAsPassword="true" restrict="{RestrictUtil.PASSWORD_REG}"/>
		</mx:FormItem>
		<!--确认密码-->
		<mx:FormItem label="{SgResourceManager.getSetString('SET_AUTH_007')}" width="100%" required="true">
			<controls2:TextInput id="t_confirmPassword" width="100%" minChars="1" maxChars="16" displayAsPassword="true" restrict="{RestrictUtil.PASSWORD_REG}"/>
		</mx:FormItem>
	</mx:Form>
</views1:GrEdit>